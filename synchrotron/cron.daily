#!/bin/bash
set -e

# import the general variable set.
export SCRIPTVARS=/srv/dak/config/tanglu/vars
. $SCRIPTVARS

CURRENT_DEV_SUITE=aequorea

DAK_LOCKDIR=/srv/dak/lock
DAK_LOCK=$DAK_LOCKDIR/daily.lock
LOCKFILE="$DAK_LOCKDIR/synchrotron.lock"
TMP_DATA_DIR="/srv/dak/tmp/synchrotron-data"
RAPIDUMO_PATH=/var/archive-kit/rapidumo

OPTIONS="$@"
qoption () {
    for a in $OPTIONS; do if [ "$a" = "$1" ]; then return 0; fi; done
    return 1
}

cleanup() {
    rm -f "$LOCKFILE"
}

# only run one cron.daily
if ! lockfile -r8 $LOCKFILE; then
    echo "aborting Synchrotron cron.daily because $LOCKFILE has already been locked"
    exit 0
fi
trap cleanup 0

mkdir -p $TMP_DATA_DIR
cd $TMP_DATA_DIR

# update the tanglu-meta copy
if [ ! -d "$TMP_DATA_DIR/tanglu-meta" ]; then
  git clone --quiet --depth=1 git://gitorious.org/tanglu/tanglu-meta.git tanglu-meta
fi
cd $TMP_DATA_DIR/tanglu-meta
git pull --quiet
# germinate!
mkdir -p /srv/dak/export/germinate/tanglu.$CURRENT_DEV_SUITE
cd /srv/dak/export/germinate/tanglu.$CURRENT_DEV_SUITE
germinate -S file://$TMP_DATA_DIR/tanglu-meta/seed  -s aequorea -d aequorea -m file:///srv/archive.tanglu.org/tanglu/ -c main contrib

cd $TMP_DATA_DIR

# fetch stuff from Debian and Tanglu archives
$RAPIDUMO_PATH/synchrotron/prepare-sync.sh

if ! qoption allowdaklock; then
	while [ -f $DAK_LOCK ]; do
		echo `date` $DAK_LOCK exists. Sleeping for 10 more minutes.
		sleep 600
	done
fi

# sync packages
sync-debian-package -a testing staging main
sync-debian-package -a testing staging contrib
sync-debian-package -a testing staging non-free

# update archive
dak generate-packages-sources2 -s staging
dak generate-releases -s staging
# sync the public ftp mirror (by syncing dists, the pool/ dir is symlinked)
rsync -aqH --delete $ftpdir/dists $public_ftpdir/

# update jenkins
maintain-jenkins-jobs --update
maintain-jenkins-jobs --checkbuild

# update the package-watch
cd /srv/dak/export/package-watch
python $RAPIDUMO_PATH/pkgcheck/versions.py
cd $TMP_DATA_DIR
